## Velocity Template.
/* 
 * Copyright (C) 2018 V12 Technology Ltd.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the Server Side Public License, version 1,
 * as published by MongoDB, Inc.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * Server Side License for more details.
 *
 * You should have received a copy of the Server Side Public License
 * along with this program.  If not, see 
 * <http://www.mongodb.com/licensing/server-side-public-license>.
 */
package ${package};

import java.util.HashMap;
import com.fluxtion.api.StaticEventProcessor;
import com.fluxtion.api.lifecycle.BatchHandler;
import com.fluxtion.api.lifecycle.Lifecycle;
import com.fluxtion.api.lifecycle.FilteredHandlerInvoker;
import com.fluxtion.builder.debug.SepDebugger;
import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;
#if(${MODEL.imports})
${MODEL.imports}
#end

@SuppressWarnings({"deprecation","unchecked"})
public class ${debugClassName} implements StaticEventProcessor, BatchHandler, Lifecycle {

//Node declarations
${MODEL.nodeDeclarations}
//Dirty flags
${MODEL.dirtyFlagDeclarations}
//Filter constants
${MODEL.filterConstantDeclarations}

    //debugger callback
    public final SepDebugger debugger;

    public ${debugClassName}(SepDebugger debugger) {
        this.debugger = debugger;
${MODEL.nodeMemberAssignments}
    }
    @Override
    public void onEvent(Object event) {
${MODEL.debugEventDispatch}
    }

${MODEL.debugEventHandlers}

    private void afterEvent(){
${MODEL.eventEndMethods}
${MODEL.resetDirtyFlags}
    }

    @Override
    public void init() {
${MODEL.initialiseMethods}
    }

    @Override
    public void tearDown() {
${MODEL.tearDownMethods}
    }

    @Override
    public void batchPause() {
${MODEL.batchPauseMethods}
    }

    @Override
    public void batchEnd() {
${MODEL.batchEndMethods}
    }

}
